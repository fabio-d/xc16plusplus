#!/bin/bash
cd "$(dirname "$0")"

if [ "$#" -le 1 ];
then
	echo "Usage: $0 vN.NN OS [OS2 [OS3]]"
	echo "OS can be linux, windows or osx"
	echo
	echo "This script expects the following input files:"
	echo " - xc16-vN.NN-OS.tar.xz: an archive produced by the pack-xc16-binaries.sh tool"
	echo " - build-vN.NN/xc16plusplus-vN.NNrXX-OS.tar.gz/.zip: a XC16++ package built by the build-in-container.sh tool"
	echo
	echo "This script produces an output file:"
	echo " - build-vN.NN/test-bundle-vN.NN-OS.zip: a ZIP archive that can be fed to test-validate-in-container.sh"
	exit 1
fi >&2

XC16VER=$1
shift

set -e

for OS in $*;
do
	# Try to locate the XC16 package generated by build-in-container.sh. We use a
	# wildcard in place of the revision number, so that this script does not need
	# to know it.
	shopt -s nullglob
	case "$OS" in
		linux)
			XC16PLUSPLUS_PACKAGE=( "build-$XC16VER/xc16plusplus-$XC16VER"r*-linux.tar.gz )
			;;
		windows)
			XC16PLUSPLUS_PACKAGE=( "build-$XC16VER/xc16plusplus-$XC16VER"r*-windows.zip )
			;;
		osx)
			XC16PLUSPLUS_PACKAGE=( "build-$XC16VER/xc16plusplus-$XC16VER"r*-osx.tar.gz )
			;;
		*)
			echo "Invalid OS" >&2
			exit 1
	esac
	shopt -u nullglob

	if [ "${#XC16PLUSPLUS_PACKAGE[@]}" != "1" ];
	then
		echo "Failed to locate build-vN.NN/xc16plusplus-vN.NNrXX-OS.tar.gz/.zip. Is it present?" >&2
		exit 1
	fi

	SCRIPT_IN_CONTAINER=test-compile-in-container-$OS-impl.sh
	PACKED_XC16_BINARIES=xc16-$XC16VER-$OS.tar.xz

	(
		set -x
		TMPDIR="$(mktemp -d)"
		trap "rm -rf $TMPDIR" exit

		mkdir -p "$TMPDIR/binaries-xc16" "$TMPDIR/binaries-xc16plusplus"
		cp "$PACKED_XC16_BINARIES" -t "$TMPDIR/binaries-xc16"
		cp "$XC16PLUSPLUS_PACKAGE" -t "$TMPDIR/binaries-xc16plusplus"
		cp "$SCRIPT_IN_CONTAINER" "$TMPDIR/helper.sh"

		cp -r "../autotests" "../example-project" -t "$TMPDIR"

		docker run --tty --rm --user=$(id -u):$(id -g) \
			--volume="$TMPDIR":/xc16plusplus-test \
			xc16plusplus:$OS-test-compile \
			/xc16plusplus-test/helper.sh $XC16VER $OS

		cp "$TMPDIR/output-bundle.zip" "build-$XC16VER/test-bundle-$XC16VER-$OS.zip"

		# Remove temporary files
		rm -rf "$TMPDIR/"*
	)
done
